{"version":3,"file":"static/js/623.3ac46ee4.chunk.js","mappings":"wTAQMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYC,GAAQ,IAAD,yBACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,GACPC,SAAU,IAEd,EAAKC,aAAe,EAAKA,aAAaC,MAAlB,WACpB,EAAKC,aAAe,EAAKA,aAAaD,MAAlB,WACpB,EAAKE,UAAY,EAAKA,UAAUF,MAAf,WARF,CASlB,CAuGA,OAvGA,oCAGD,SAAaG,GACT,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpBC,KAAKC,UAAL,UACKF,EAAOD,GAEf,6BAED,SAAaF,GACTA,EAAMM,eAAeN,GAErB,IAAMO,EAASC,IAAAA,UAAa,CACxB,SAAYJ,KAAKX,MAAMC,MACvB,SAAYU,KAAKX,MAAME,WAMF,IAApBS,KAAKX,MAAMC,MAAuC,IAAvBU,KAAKX,MAAME,SAEvCc,MAAM,mCAGNC,IAAAA,KAAA,iBC/Cc,YD+Cd,YC9Cc,ID8Cd,cAA2DH,EAT7C,CACd,OAAU,mBACV,eAAgB,sCAO4DI,MACxE,SAAAC,GE7CQ,IAACC,EF8CiB,MAAlBD,EAAOE,QE9CND,EF+CMD,EAAOG,KE9CpCC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUN,MFgD3BJ,MAAM,uFACNW,QAAQC,IAAI,UAEjB,IAAEC,OAAM,SAAAC,GACkB,KAArBA,EAAEC,SAASV,QACXL,MAAM,kCAEX,GAEd,0BAED,WACIL,KAAKC,SAAS,CACVX,MAAO,GACPC,SAAU,IAEjB,uBAED,WACI,OACI,0BACA,iBACI8B,UAAU,mBACVC,YAAU,EACVC,SAAUvB,KAAKN,aAHnB,UAKI,4BACI,iBAAK2B,UAAU,aAAf,WACI,kBAAOG,QAAQ,qBAAf,4BACA,kBACIC,KAAK,QACL1B,KAAK,QACLsB,UAAU,eACVK,GAAG,qBACH,mBAAiB,YACjBC,UAAQ,EACRC,YAAY,cACZ9B,MAAOE,KAAKX,MAAMC,MAClBuC,SAAU7B,KAAKR,mBAGvB,iBAAK6B,UAAU,aAAaS,MAAO,CAAEC,WAAY,IAAjD,WACI,kBAAOP,QAAQ,wBAAf,uBACA,kBACIC,KAAK,WACL1B,KAAK,WACLsB,UAAU,eACVK,GAAG,wBACHC,UAAQ,EACRC,YAAY,WACZ9B,MAAOE,KAAKX,MAAME,SAClBsC,SAAU7B,KAAKR,mBAGvB,iBAAKsC,MAAO,CAAEE,UAAW,IAAzB,WACI,mBAAQP,KAAK,SAASJ,UAAU,kBAAhC,qBAGA,mBACII,KAAK,SACLJ,UAAU,yCACVY,QAASjC,KAAKL,UAHlB,6BAWnB,OAjHCR,CAAa+C,EAAAA,WAiInB,EAbc,WACV,OAEI,SAACC,EAAA,EAAD,CACIC,MAAM,QACNC,YAAY,gEAFhB,UAGI,gBAAKhB,UAAU,4CAAf,UACI,SAAClC,EAAD,OAIf,C","sources":["pages/Login.js","configs.js","Auth.js"],"sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport Main from '../layouts/Main';\nimport { setToken } from \"../Auth\"\nimport qs from 'qs'\nimport { serverHost, serverPort } from '../configs';\n\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.clearForm = this.clearForm.bind(this);\n    }\n\n    \n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault(event);\n\n        const params = qs.stringify({\n            'username': this.state.email,\n            'password': this.state.password\n          });\n          const headers = {\n            'accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded'\n          };\n        if ((this.state.email == \"\") & (this.state.password == \"\")) {\n            // TODO: pop up a warning window here\n            alert(\"Please input email and password\")\n            return;\n        } else {\n            axios.post(`http://${serverHost}:${serverPort}/v2/login/`, params, headers).then(\n                result => {\n                    if (result.status === 200) {\n                      setToken(result.data);\n                    } else {\n                        alert(\"Unknown error happened, please try again later or inspect console log for debugging\");\n                        console.log(\"result\");\n                    }\n                  }).catch(e => {\n                    if (e.response.status == 401) {\n                        alert(\"In correct username or password\")\n                    }\n                  });\n        }\n    }\n\n    clearForm() {\n        this.setState({\n            email: \"\",\n            password: \"\"\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            <form\n                className=\"needs-validation\"\n                noValidate\n                onSubmit={this.handleSubmit}\n            >\n                <div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            className=\"form-control\"\n                            id=\"exampleInputEmail1\"\n                            aria-describedby=\"emailHelp\"\n                            required\n                            placeholder=\"Enter email\"\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <div className=\"form-group\" style={{ paddingTop: 40 }}>\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            className=\"form-control\"\n                            id=\"exampleInputPassword1\"\n                            required\n                            placeholder=\"Password\"\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <div style={{ marginTop: 40 }}>\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Submit\n                        </button>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary float-right col-auto\"\n                            onClick={this.clearForm}>\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </form >\n            </div>\n        );\n    }\n}\n\nconst Login = () => {\n    return (\n        \n        <Main\n            title=\"Login\"\n            description=\"Secret login page only Michael and approved person can access\">\n            <div className='d-flex justify-content-center flex-nowrap'>\n                <Form />  \n            </div>\n        </Main>\n    )\n}\n\nexport default Login;\n","export const serverHost = '127.0.0.1';\nexport const serverPort = 8000;\n","/* eslint-disable */\nimport { useLocation, Redirect } from 'react-router-dom';\n\nexport const setToken = (token) => {\n  localStorage.setItem('authToken', JSON.stringify(token));// make up your own token\n};\n\nexport const fetchToken = () => {\n  return localStorage.getItem('authToken');\n}\n\nexport const RequireToken = ({ children }) => {\n  const auth = fetchToken();\n  const location = useLocation();\n\n  if (!auth) {\n    return <Redirect to=\"/\" state={{ from: location }} />;\n  }\n\n  return children;\n};\n"],"names":["Form","props","state","email","password","handleChange","bind","handleSubmit","clearForm","event","target","value","name","this","setState","preventDefault","params","qs","alert","axios","then","result","token","status","data","localStorage","setItem","JSON","stringify","console","log","catch","e","response","className","noValidate","onSubmit","htmlFor","type","id","required","placeholder","onChange","style","paddingTop","marginTop","onClick","React","Main","title","description"],"sourceRoot":""}